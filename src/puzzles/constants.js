"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.options = exports.MISC = exports.GIGA = exports.KILO = exports.MEGA = exports.CLCK = exports.SQR1 = exports.SKWB = exports.PYRA = exports.R777 = exports.R666 = exports.R555 = exports.R444 = exports.R333 = exports.R222 = exports.STANDARD_PALETTE = exports.ScramblerList = exports.PuzzleTypeName = void 0;
exports.strToHex = strToHex;
exports.PuzzleTypeName = [
    "rubik",
    "icarry",
    "skewb",
    "square1",
    "pyraminx",
    "axis",
    "fisher",
    "ivy",
    "clock",
    "megaminx",
    "mirror",
    "dino",
    "rex",
    "redi",
    "mixup",
    "pyramorphix",
    "gear",
    "dreidel",
    "bandaged222",
    "bicube",
    "square2",
    "pandora",
    "ultimateSkewb",
    "pyraminxCrystal",
    "tetraminx",
    "meierHalpernPyramid",
    "sq1Star",
    "windmill",
    "helicopter",
    "supersquare1",
    "fto",
    "timemachine",
    "masterskewb",
    "void",
    "diamondcube",
    "axis44",
    "fisher44",
    "redibarrel",
    "twisty33",
    "ghost",
    "barrel33",
];
exports.ScramblerList = [
    "222so",
    "333",
    "333fm",
    "333ni",
    "333mbf",
    "333oh",
    "444bld",
    "444wca",
    "555wca",
    "555bld",
    "666wca",
    "777wca",
    "clkwca",
    "mgmp",
    "pyrso",
    "skbso",
    "sqrs",
];
var COLORS = {
    green: "rgb(0,157,84)",
    red: "rgb(220,66,47)",
    blue: "rgb(61,129,246)",
    orange: "rgb(232,112,0)",
    yellow: "rgb(255,235,59)",
    white: "rgb(230,230,230)",
    black: "rgb(0,0,0)",
    gray: "rgb(75,81,90)",
    darkGray: "rgb(50,50,50)",
    lightGray: "rgb(211,211,211)",
    violet: "rgb(138,27,255)",
    pink: "rgb(237,150,161)",
    lgreen: "rgb(74,217,49)",
    lyellow: "rgb(220,211,165)",
    lblue: "rgb(83,177,243)",
    /// Printable
    pgreen: "rgb(16,162,4)",
    pred: "rgb(213,0,0)",
    pblue: "rgb(43,43,255)",
    porange: "rgb(255,108,11)",
    pyellow: "rgb(255,242,0)",
    pwhite: "rgb(255,255,255)",
    pblack: "rgb(0,0,0)",
    pgray: "rgb(200,200,200)",
    pviolet: "rgb(185,104,251)",
    ppink: "rgb(249,187,204)",
    plgreen: "rgb(74,217,49)",
    plyellow: "rgb(255,255,183)",
    plblue: "rgb(83,177,243)",
};
function getColorByName(colorName) {
    return COLORS[colorName] || colorName;
}
exports.STANDARD_PALETTE = {
    y: getColorByName("yellow"),
    r: getColorByName("red"),
    o: getColorByName("orange"),
    b: getColorByName("blue"),
    g: getColorByName("green"),
    w: getColorByName("white"),
    x: getColorByName("gray"),
    d: getColorByName("black"),
    v: getColorByName("violet"),
    k: getColorByName("yellow"),
    yellow: getColorByName("yellow"),
    red: getColorByName("red"),
    orange: getColorByName("orange"),
    blue: getColorByName("blue"),
    green: getColorByName("green"),
    white: getColorByName("white"),
    gray: getColorByName("gray"),
    darkGray: getColorByName("darkGray"),
    lightGray: getColorByName("lightGray"),
    black: getColorByName("black"),
    violet: getColorByName("violet"),
    pink: getColorByName("pink"),
    lblue: getColorByName("lblue"),
    lyellow: getColorByName("lyellow"),
    lgreen: getColorByName("lgreen"),
};
function strToHex(color) {
    var nums = color.split("(")[1].split(")")[0].split(",").map(Number);
    return (nums[0] << 16) | (nums[1] << 8) | nums[2];
}
// SCRAMBLER OPTIONS
exports.R222 = [
    "222so",
    "222o",
    "2223",
    "2226",
    "222eg",
    "222eg0",
    "222eg1",
    "222eg2",
    "222nb",
    "222tcp",
    "222tcn",
    "222lsall",
];
exports.R333 = [
    "333",
    "333ni",
    "333fm",
    "333oh",
    "333o",
    "edges",
    "corners",
    "ll",
    "zbll",
    "cll",
    "ell",
    "lse",
    "lsemu",
    "cmll",
    "f2l",
    "lsll2",
    "2gll",
    "zbls",
    "zzll",
    "oll",
    "pll",
    "eoline",
    "easyc",
    "333ft",
    "333custom",
    "2gen",
    "2genl",
    "roux",
    "3gen_F",
    "3gen_L",
    "RrU",
    "half",
    "lsll",
    "coll",
    "eols",
    "wvls",
    "vls",
    "easyxc",
    "sbrx",
    "mt3qb",
    "mteole",
    "mttdr",
    "mt6cp",
    "mtcdrll",
    "mtl5ep",
    "ttll",
];
exports.R444 = [
    "444wca",
    "444bld",
    "444m",
    "444",
    "444yj",
    "4edge",
    "RrUu",
];
exports.R555 = ["555wca", "555bld", "555", "5edge"];
exports.R666 = ["666wca", "666si", "666p", "666s", "6edge"];
exports.R777 = ["777wca", "777si", "777p", "777s", "7edge"];
exports.PYRA = [
    "pyrso",
    "pyro",
    "pyrm",
    "pyrl4e",
    "pyr4c",
    "pyrnb",
];
exports.SKWB = ["skbso", "skbo", "skb", "skbnb"];
exports.SQR1 = ["sqrs", "sqrcsp", "sq1h", "sq1t"];
exports.CLCK = [
    "clkwca",
    "clk",
    "clkwca",
    "clko",
    "clkc",
    "clke",
];
exports.MEGA = [
    "mgmp",
    "mgmc",
    "mgmo",
    "minx2g",
    "mlsll",
    "mgmll",
    "mgmpll",
];
exports.KILO = ["klmso", "klmp"];
exports.GIGA = ["giga"];
exports.MISC = [
    ["r3", "r3ni"],
    "r234w",
    "r2345w",
    "r23456w",
    "r234567w",
    "r234",
    "r2345",
    "r23456",
    "r234567",
    "sq2",
    "bic",
    ["gearso", "gearo", "gear"],
    ["redim", "redi"],
    ["ivy", "ivyo", "ivyso"],
    ["prcp", "prco"],
    ["heli"],
    ["888"],
    ["999"],
    ["101010"],
    ["111111"],
    ["mpyr"],
    ["223"],
    ["233"],
    ["334"],
    ["336"],
    ["ssq1t"],
    ["fto"],
    ["133"],
    ["sfl"],
];
var OPTS = [
    { type: "rubik", order: [2] },
    { type: "rubik", order: [3] },
    { type: "rubik", order: [4] },
    { type: "rubik", order: [5] },
    { type: "rubik", order: [6] },
    { type: "rubik", order: [7] },
    { type: "pyraminx", order: [3] },
    { type: "skewb" },
    { type: "square1" },
    { type: "clock" },
    { type: "megaminx", order: [3] },
    { type: "megaminx", order: [2] },
    { type: "megaminx", order: [5] },
];
var OPTS_MISC = [
    [{ type: "rubik", order: [3] }],
    [2, 3, 4].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5, 6].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5, 6, 7].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5, 6].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [2, 3, 4, 5, 6, 7].map(function (n) { return ({ type: "rubik", order: [n] }); }),
    [{ type: "square2" }],
    [{ type: "bicube" }],
    [{ type: "gear" }],
    [{ type: "redi" }],
    [{ type: "ivy" }],
    [{ type: "pyraminxCrystal" }],
    [{ type: "helicopter" }],
    [{ type: "rubik", order: [8] }],
    [{ type: "rubik", order: [9] }],
    [{ type: "rubik", order: [10] }],
    [{ type: "rubik", order: [11] }],
    [{ type: "pyraminx", order: [4] }],
    [{ type: "rubik", order: [2, 2, 3] }],
    [{ type: "rubik", order: [3, 3, 2] }],
    [{ type: "rubik", order: [3, 3, 4] }],
    [{ type: "rubik", order: [3, 3, 6] }],
    [{ type: "supersquare1" }],
    [{ type: "fto" }],
    [{ type: "rubik", order: [3, 3, 1] }],
    [{ type: "rubik", order: [3, 1, 3] }],
];
var MODES = [
    exports.R222,
    exports.R333,
    exports.R444,
    exports.R555,
    exports.R666,
    exports.R777,
    exports.PYRA,
    exports.SKWB,
    exports.SQR1,
    exports.CLCK,
    exports.MEGA,
    exports.KILO,
    exports.GIGA,
];
exports.options = new Map();
for (var i = 0, maxi = MODES.length; i < maxi; i += 1) {
    for (var j = 0, maxj = MODES[i].length; j < maxj; j += 1) {
        exports.options.set(MODES[i][j], OPTS[i]);
    }
}
var _loop_1 = function (i, maxi) {
    var m = exports.MISC[i];
    if (Array.isArray(m)) {
        m.forEach(function (m) { return exports.options.set(m, OPTS_MISC[i]); });
    }
    else {
        exports.options.set(m, OPTS_MISC[i]);
    }
};
for (var i = 0, maxi = exports.MISC.length; i < maxi; i += 1) {
    _loop_1(i, maxi);
}
